arrange(desc(`count`))
#let's look at the Tboxx field, it's been idded by staff as important
tree_condition <- trees %>%
filter( CONDITION == "Fair")  %>%
group_by(CONDITION, WARD) %>%
summarise(count=n()) %>%
arrange(desc(`count`))
tree_health <- trees %>%
filter(TBOX_STAT == "Plant" | TBOX_STAT == "Open" | TBOX_STAT == "Proposed") %>%
group_by(TBOX_STAT, WARD) %>%
summarise(count=n()) %>%
arrange(desc(`count`))
#this groups the dataframe in a more digestable way using the tidyr spread command,
tree_health_together <- tree_health %>%
spread(TBOX_STAT, count)
#now we can look at the percentage of open tboxes by ward
tree_health_together = mutate(tree_health_together,
pct_empty = ((Open /(Plant))* 100),
pct_proposed =(( (Open-Proposed) / Plant)* 100)
)
View(tree_tbox)
View(tree_health)
View(tree_health_together)
o2001_subset_trees <- subset_trees  %>%
filter(TBOX_STAT == "Plant" )  %>%
filter(year_planted > 2000) %>%
group_by(`WARD`) %>%
summarise(count=n()) %>%
arrange(desc(`count`))
library(tidyverse)
library(lubridate)
library(tidyr)
trees <- read_csv("Urban_Forestry_Street_Trees.csv")
#and we can see where the trees have been planted by ward
o2001_subset_trees <- trees  %>%
filter(TBOX_STAT == "Plant" )  %>%
filter(year_planted > 2000) %>%
group_by(`WARD`) %>%
summarise(count=n()) %>%
arrange(desc(`count`))
o2001_subset_trees <- trees  %>%
filter(TBOX_STAT == "Plant" )  %>%
filter(year_planted > 2000) %>%
group_by(`WARD`) %>%
summarise(count=n()) %>%
arrange(desc(`count`))
#and we can see where the trees have been planted by ward
o2001_subset_trees <- trees  %>%
filter(TBOX_STAT == "Plant" )  %>%
filter(year_planted > 2000) %>%
group_by(`WARD`) %>%
summarise(count=n()) %>%
arrange(desc(`count`))
#and we can see where the trees have been planted by ward
o2001_subset_trees <- trees  %>%
filter(TBOX_STAT == "Plant" & year_planted > 2000)  %>%
#  group_by(`WARD`) %>%
# summarise(count=n()) %>%
#  arrange(desc(`count`))
#let's get a percentage of trees planted after 2001
o2001_subset_trees = mutate(o2001_subset_trees,
pct_planted = ((count /sum(count))* 100))
#and we can see where the trees have been planted by ward
o2001_subset_trees <- trees  %>%
filter(TBOX_STAT == "Plant" & year_planted > 2000)  #%>%
View(trees)
type(trees$DATE_PLANT)
trees$year_planted <- (format(trees$DATE_PLANT, "%Y"))
o2001_subset_trees <- trees  %>%
filter(TBOX_STAT == "Plant" & year_planted > 2000)  #%>%
#  group_by(`WARD`) %>%
# summarise(count=n()) %>%
#  arrange(desc(`count`))
View(o2001_subset_trees)
o2001_subset_trees <- trees  %>%
filter(TBOX_STAT == "Plant" & year_planted > 2000 & CONDITION != 'Dead')
o2001_subset_trees <- trees  %>%
filter(TBOX_STAT == "Plant" & year_planted > 2000 & CONDITION != 'Dead')  %>%
group_by(`WARD`) %>%
summarise(count=n()) %>%
arrange(desc(`count`))
o2001_subset_trees = mutate(o2001_subset_trees,
pct_planted = ((count /sum(count))* 100))
o2001_subset_trees <- trees  %>%
filter(TBOX_STAT == "Plant" & year_planted > 2000)  %>%
group_by(`WARD`) %>%
summarise(count=n()) %>%
arrange(desc(`count`))
#let's get a percentage of trees planted after 2001
o2001_subset_trees = mutate(o2001_subset_trees,
pct_planted = ((count /sum(count))* 100))
tree_condition <- trees %>%
filter( CONDITION == "Dead")  %>%
group_by(CONDITION, WARD) %>%
summarise(count=n()) %>%
arrange(desc(`count`))
View(tree_condition)
sum(o2001_subset_trees$count)
o2008_subset_trees <- trees  %>%
filter(TBOX_STAT == "Plant" & year_planted > 2008)  %>%
group_by(`WARD`) %>%
summarise(count=n()) %>%
arrange(desc(`count`))
#let's get a percentage of trees planted after 2001
o2008_subset_trees = mutate(o2008_subset_trees,
pct_planted = ((count /sum(count))* 100))
View(o2008_subset_trees)
sum(o2008_subset_trees$count)
View(o2008_subset_trees)
#let's look at the Tboxx field, it's been idded by staff as important
tree_tbox <- trees %>%
group_by(TBOX_STAT) %>%
summarise(count=n()) %>%
arrange(desc(`count`))
View(tree_health)
tree_health <- trees %>%
filter(TBOX_STAT == "Plant" | TBOX_STAT == "Open" | TBOX_STAT == "Proposed") %>%
group_by(TBOX_STAT, WARD) %>%
summarise(count=n()) %>%
arrange(desc(`count`))
View(tree_health)
tree_health <- trees %>%
filter(TBOX_STAT == "Plant" | TBOX_STAT == "Open" | TBOX_STAT == "Proposed") %>%
group_by(TBOX_STAT, WARD) %>%
summarise(count=n()) %>%
arrange(desc(`count`))
View(tree_health)
View(tree_health_together)
tree_health_together <- tree_health %>%
spread(TBOX_STAT, count)
View(tree_health)
View(tree_health_together)
tree_health_together = mutate(tree_health_together,
pct_empty = ((Open /(Plant))* 100),
pct_proposed =(( (Open-Proposed) / Plant)* 100),
pct_of_total =(( (Open+Plant) / sum(Plant,Open)* 100)
))
tree_tbox <- trees %>%
group_by(TBOX_STAT) %>%
summarise(count=n()) %>%
arrange(desc(`count`))
View(tree_tbox)
library(learnr)
mean(years)
years <- c(301, 978, 101)
str(burgers)
library(learnr)
library(tidyverse)
library(learnr)
install.packages(learnr)
install.packages("learnr")
library(learnr)
library(tidyverse)
years <- c(301, 978, 101)
burgers <- data.frame(id=c(60006,60007,60008,60009, 60010), name=c("Bob", "Linda", "Louise", "Tina", "Gene"), age=c(45, 44, 12, 13, 11), shirt=c("White", "Red", "Pink", "Blue", "Yellow"))
burgers$shirt<- factor(burgers$shirt)
burgers$id <- factor(burgers$id)
burgers$name <- as.character(burgers$name)
nospace <- function(a) {
b <- gsub(" ","",a)
gsub("\\n", "", b)
}
is_bad_code <- function(user_code, check_code, envir_result) {
is_null <- is.null(eval(parse(text = user_code)))
e_rows <- nrow(eval(parse(text = user_code)))
r_rows <- nrow(eval(parse(text = check_code), envir = envir_result))
e_cols <- ncol(eval(parse(text = user_code)))
r_cols <- ncol(eval(parse(text = check_code), envir = envir_result))
e_type <- typeof(eval(parse(text = user_code)))
r_type <- typeof(eval(parse(text = check_code), envir=envir_result))
e_len <- length(eval(parse(text = user_code)))
r_len <- length(eval(parse(text = check_code)))
if (is_null!=T){
if (e_len!=0 & r_len!=0) {
if (e_type==r_type) {
if (e_type!="character" & e_type!="double" & e_type!="integer" & e_type!="logical")  {
if (e_rows==r_rows && e_cols==r_cols) {
eval(parse(text = user_code)) != eval(parse(text = check_code), envir = envir_result)
} else {
TRUE
}
} else { eval(parse(text = user_code)) != eval(parse(text = check_code), envir = envir_result) }
} else {
TRUE
}
} else { TRUE }
} else { nospace(user_code) != nospace(check_code)}
}
checker <- function(label, user_code, check_code, envir_result, evaluate_result, ...) {
if (is_bad_code(user_code, check_code, envir_result)) {
return(list(message = "Code wasn't right!", correct = FALSE, location = "append"))
} else {
return(list(message = "Great Job!", correct = TRUE, location = "append"))
}
}
tutorial_options(exercise.timelimit = 30, exercise.checker = checker)
#tutorial_options(exercise.checker = checkthat::check_exercise)
```{r filter, exercise=TRUE}
ub
ub
```
```{r filter, exercise=TRUE}
```{r filter, exercise=TRUE}
ub <- c(17)
ub
ub <- 17
ub
ub <- 17
ub
```{r y1, exercise=TRUE}
years <- c(301, 978, 101)
years
years <- c(301, 978, 101)
years
mean(years)
str(burgers)
quiz(
question("What kind of class is the variable id?",
answer("character"),
answer("number"),
answer("factor", correct = TRUE),
answer("date"),
random_answer_order= TRUE
))
burgers
burgers[,4]
burgers$shirt
burgers[,2]
burgers[2,]
```{r v4, exercise=TRUE}
```{r v4, exercise=TRUE}
# Add to the line below
burgers[2,]
burgers$id <- as.numeric(burgers$id )
```{r v3, exercise=TRUE}
```{r v3, exercise=TRUE}
```{r v3, exercise=TRUE}
burgers$id <- as.numeric(as.character(burgers$id ))
burgers$id
class(burgers$id)
burgers$id <- as.numeric(burgers$id ))
burgers$id <- as.numeric(burgers$id )
class(burgers$id)
age_test <- burgers$age[5]    11
age_test <- burgers$age[5]  ==  11
age_test
library(tidyverse)
library(lubridate)
library(tidyr)
trees <- read_csv("Urban_Forestry_Street_Trees.csv")
tree_tbox <- trees %>%
group_by(TBOX_STAT) %>%
summarise(count=n()) %>%
arrange(desc(`count`))
View(tree_tbox)
tree_condition <- trees %>%
#filter( CONDITION == "Dead")  %>%
group_by(CONDITION, WARD) %>%
summarise(count=n()) %>%
arrange(desc(`count`))
View(tree_condition)
tree_health <- trees %>%
filter(TBOX_STAT == "Plant" | TBOX_STAT == "Open" | TBOX_STAT == "Proposed") %>%
group_by(TBOX_STAT, WARD) %>%
summarise(count=n()) %>%
arrange(desc(`count`))
tree_health_together <- tree_health %>%
spread(TBOX_STAT, count)
#now we can look at the percentage of open tboxes by ward
tree_health_together = mutate(tree_health_together,
pct_empty = ((Open /(Plant))* 100),
pct_proposed =(( (Open-Proposed) / Plant)* 100)
)
View(tree_health_together)
tree_condition <- trees %>%
filter( CONDITION == "Open")  %>%
# group_by(CONDITION, WARD) %>%
summarise(count=n()) %>%
arrange(desc(`count`))
View(tree_health)
View(tree_condition)
tree_condition <- trees %>%
filter( CONDITION == "Open" | WARD == "7"  %>%
# group_by(CONDITION, WARD) %>%
#summarise(count=n()) %>%
#arrange(desc(`count`))
tree_condition <- trees %>%
filter( CONDITION == "Open" | WARD == "7" ) #%>%
# group_by(CONDITION, WARD) %>%
#summarise(count=n()) %>%
#arrange(desc(`count`))
tree_condition <- trees %>%
filter( CONDITION == "Open" & WARD == "7" ) #%>%
# group_by(CONDITION, WARD) %>%
#summarise(count=n()) %>%
#arrange(desc(`count`))
View(tree_condition)
tree_condition <- trees %>%
filter( CONDITION == "Open" & WARD == 7 ) #%>%
# group_by(CONDITION, WARD) %>%
#summarise(count=n()) %>%
View(tree_condition)
tree_condition <- trees %>%
filter( CONDITION == "Open") %>%
filter(WARD == 7 )
View(trees)
#let's look at the Tboxx field, it's been idded by staff as important
tree_condition <- trees %>%
filter( CONDITION == "Open") %>%
filter(WARD == "7" ) #%>%
tree_condition <- trees %>%
filter( CONDITION == "Open")# %>%
#filter(WARD == "7" ) #%>%
# group_by(CONDITION, WARD) %>%
#summarise(count=n()) %>%
#arrange(desc(`count`))
tree_condition <- trees %>%
filter( CONDITION == "Open")# %>%
#filter(WARD == "7" ) #%>%
# group_by(CONDITION, WARD) %>%
#summarise(count=n()) %>%
#arrange(desc(`count`))
View(tree_condition)
tree_condition <- trees %>%
filter( TBOX_STAT == "Open" & WARD == "7" ) #%>%
# group_by(CONDITION, WARD) %>%
#summarise(count=n()) %>%
View(tree_condition)
write_csv(tree_condition, "open_ward_7.csv")
tree_condition <- trees %>%
filter( TBOX_STAT == "Open" ) #%>%
# group_by(CONDITION, WARD) %>%
#summarise(count=n()) %>%
#arrange(desc(`count`))
write_csv(tree_condition, "open_all_ward.csv")
subset_trees <- trees %>%
subset(trees$year_planted > 2001)
#now we can look at where trees have been planted since 2001...that's not neccessary all the time.
subset_trees <- trees %>%
subset(trees$year_planted > 2008)
write_csv(subset_trees, "trees_since_2008.csv")
subset_trees <- trees %>%
subset(year_planted > 2008)
type(trees$DATE_PLANT)
trees$year_planted <- (format(trees$DATE_PLANT, "%Y"))
subset_trees <- trees %>%
subset(year_planted > 2008)
write_csv(subset_trees, "trees_since_2008.csv")
library(tidyverse)
library(lubridate)
library(tidyr)
trees <- read_csv("Urban_Forestry_Street_Trees.csv")
#let's look at the Tboxx field, it's been idded by staff as important
tree_tbox <- trees %>%
group_by(TBOX_STAT) %>%
summarise(count=n()) %>%
arrange(desc(`count`))
#let's look at the Tboxx field, it's been idded by staff as important
tree_condition <- trees %>%
filter( TBOX_STAT == "Open" ) #%>%
# group_by(CONDITION, WARD) %>%
#summarise(count=n()) %>%
#arrange(desc(`count`))
write_csv(tree_condition, "open_all_ward.csv")
tree_health <- trees %>%
filter(TBOX_STAT == "Plant" | TBOX_STAT == "Open" | TBOX_STAT == "Proposed") %>%
group_by(TBOX_STAT, WARD) %>%
summarise(count=n()) %>%
arrange(desc(`count`))
#this groups the dataframe in a more digestable way using the tidyr spread command,
tree_health_together <- tree_health %>%
spread(TBOX_STAT, count)
#now we can look at the percentage of open tboxes by ward
tree_health_together = mutate(tree_health_together,
pct_empty = ((Open /(Plant))* 100),
pct_proposed =(( (Open-Proposed) / Plant)* 100)
)
write_csv(tree_health_together, "tree_health_together.csv")
#organizes all trees by ward
tree_ward <- trees %>%
filter(TBOX_STAT == "Plant" ) %>%
group_by(`WARD`) %>%
summarise(count=n()) %>%
arrange(desc(`count`))
# Takes the year from date planted and creates a new column, year planted.
type(trees$DATE_PLANT)
trees$year_planted <- (format(trees$DATE_PLANT, "%Y"))
#now we can look at our trees data and filter 'planted' t boxes before counting the year trees were planted
year_planted <- trees %>%
filter(TBOX_STAT == "Plant" ) %>%
group_by( `year_planted`) %>%
summarise(count=n()) %>%
arrange(desc(`count`))
#now we can look at where trees have been planted since 2001...that's not neccessary all the time.
subset_trees <- trees %>%
subset(year_planted > 2008)
write_csv(subset_trees, "trees_since_2008.csv")
#now we can look at where trees have been planted since 2001...that's not neccessary all the time.
subset_trees <- trees %>%
subset(year_planted > 2008)
write_csv(subset_trees, "trees_since_2008.csv")
#and we can see where the trees have been planted by ward
o2008_subset_trees <- trees  %>%
filter(TBOX_STAT == "Plant" & year_planted > 2008)  %>%
group_by(`WARD`) %>%
summarise(count=n()) %>%
arrange(desc(`count`))
#let's get a percentage of trees planted after 2008
o2008_subset_trees = mutate(o2008_subset_trees,
pct_planted = ((count /sum(count))* 100))
#let's make that a csv
write_csv(o2008_subset_trees, "o2008_subset_trees.csv")
#identifies trees planted in 2017
tree_2017_ward_1 <- trees %>%
#filter(TBOX_STAT == "Plant" ) %>%
filter(year_planted == 2017 ) %>%
group_by(`WARD`) %>%
summarise(count=n()) %>%
arrange(desc(`count`))
#identifies trees planted in 2016
tree_ward_2016 <- trees_2016  %>%
filter(TBOX_STAT == "Plant" ) %>%
filter(year_planted == 2016 ) %>%
group_by(`WARD`) %>%
summarise(count=n()) %>%
arrange(desc(`count`))
#looks at the number of each type of tree in the city
tree_names <- trees %>%
filter(TBOX_STAT == "Plant" ) %>%
group_by( `CMMN_NM`) %>%
summarise(count=n()) %>%
arrange(desc(`count`))
#looks at the number of each genus of tree in the city
tree_PRE2001_genus <- trees %>%
#filter(TBOX_STAT == "Plant" ) %>%
filter(year_planted < 2000) %>%
# group_by(GENUS_NAME) %>%
summarise(count=n()) %>%
arrange(desc(`count`))
#looks at the number of each genus of tree in the city
tree_POST2001_genus <- trees  %>%
filter(TBOX_STAT == "Plant" )  %>%
filter(year_planted > 2000) %>%
group_by(GENUS_NAME) %>%
summarise(count=n()) %>%
arrange(desc(`count`))
tree_POST2001_genus = mutate(tree_POST2001_genus,
pct_of_genus = ((count /sum(count))* 100))
tree_POST2001_genus <- mutate(tree_POST2001_genus, rounded_pct_genus = round(tree_POST2001_genus$pct_of_genus, digits = 2))
#write into a csv
write_csv(tree_POST2001_genus, "tree_POST2001_genus.csv")
#now we can look at where trees have been planted since 2001...that's not neccessary all the time.
subset_trees <- trees %>%
subset(trees$year_planted > 2001)
tree_condition <- trees %>%
#filter( TBOX_STAT == "Open" ) %>%
group_by(CONDITION, WARD) %>%
summarise(count=n()) %>%
arrange(desc(`count`))
View(tree_condition)
tree_condition_together <- tree_condition %>%
spread(CONDITION, count)
View(tree_condition_together)
write_csv(tree_condition_together, "all_conditions_by_ward.csv")
Proposed_trees <- trees %>%
filter(TBOX_STAT == "Proposed")
library(tidyverse)
library(lubridate)
library(tidyr)
Proposed_trees <- trees %>%
filter(TBOX_STAT == "Proposed")
write_csv(Proposed_trees, "Proposed_trees.csv")
tree_POST2001_genus <- trees  %>%
filter(TBOX_STAT == "Plant" )  %>%
#filter(year_planted > 2000) %>%
group_by(GENUS_NAME) %>%
summarise(count=n()) %>%
arrange(desc(`count`))
tree_POST2001_genus = mutate(tree_POST2001_genus,
pct_of_genus = ((count /sum(count))* 100))
tree_POST2001_genus <- mutate(tree_POST2001_genus, rounded_pct_genus = round(tree_POST2001_genus$pct_of_genus, digits = 2))
#write into a csv
write_csv(tree_POST2001_genus, "tree_POST2001_genus.csv")
#now we can look at where trees have been planted since 2001...that's not neccessary all the time.
subset_trees <- trees %>%
subset(trees$year_planted > 2001)
library(tidyverse)
library(lubridate)
library(tidyr)
tree_POST2001_genus <- trees  %>%
filter(TBOX_STAT == "Plant" )  %>%
#filter(year_planted > 2000) %>%
group_by(GENUS_NAME) %>%
summarise(count=n()) %>%
arrange(desc(`count`))
tree_POST2001_genus = mutate(tree_POST2001_genus,
pct_of_genus = ((count /sum(count))* 100))
tree_POST2001_genus <- mutate(tree_POST2001_genus, rounded_pct_genus = round(tree_POST2001_genus$pct_of_genus, digits = 2))
#write into a csv
write_csv(tree_POST2001_genus, "tree_POST2001_genus.csv")
View(tree_POST2001_genus)
tree_POST2001_genus <- trees  %>%
filter(TBOX_STAT == "Plant" )  %>%
filter(year_planted > 2000) %>%
group_by(GENUS_NAME) %>%
summarise(count=n()) %>%
arrange(desc(`count`))
tree_POST2001_genus = mutate(tree_POST2001_genus,
pct_of_genus = ((count /sum(count))* 100))
tree_POST2001_genus <- mutate(tree_POST2001_genus, rounded_pct_genus = round(tree_POST2001_genus$pct_of_genus, digits = 2))
View(Proposed_trees)
View(tree_health_together)
